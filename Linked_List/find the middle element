int getlength(Node *head)
{
    Node *temp=head;
    int cnt=0;
    while(temp!=NULL)
    {
        cnt++;
        temp=temp->next;;
    }
    int abhi=(cnt/2)+1;
    int index=1;
    Node *zodge=head;
    while(index<abhi)
    {
        zodge=zodge->next;
        index++;
    }
    
    int rohit=zodge->data;
    return rohit;
    
    
    
    
    
}
class Solution{
    public:
    /* Should return data of middle node. If linked list is empty, then  -1*/
    int getMiddle(Node *head)
    {
        return getlength(head);
        // Your code here
    }
};
_______________________________________________________________________________________________________

//approach 2

class Solution{
    public:
    /* Should return data of middle node. If linked list is empty, then  -1*/
    int getMiddle(Node *head)
    {
        
        // Your code here
        
        Node *fast=head->next;
        Node *slow=head;
        while(fast!=NULL)
        {
            fast=fast->next;
            if(fast!=NULL)
            {
                fast=fast->next;
            }
            slow=slow->next;
        }
        int abhi=slow->data;
        return abhi;
    }
};
